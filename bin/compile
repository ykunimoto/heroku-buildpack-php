#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>
# BUILD_DIR is modified between builds
# CACHE_DIR is retained between builds

# fail fast
#set -e
set -x

APACHE_VERSION="2.2.22"
PHP_VERSION="5.4.1"
APACHE_BINARY_URL="https://dl.dropbox.com/u/1682752/github/heroku/apache-${APACHE_VERSION}_php-${PHP_VERSION}.tar.bz2"
APACHE_DIR=apache
PHP_DIR=php

log_action() 
{
  do_log '----->' "$@"
}

log_fail() 
{
  do_log 'XXXXXX' "$@"
}

do_log()
{
  local prefix=$1
  shift
  echo "$prefix $@"
}

CURL_FLAGS="--silent --max-time 60 --location"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

pushd "$BUILD_DIR"

# include .files when moving things around
shopt -s dotglob

# move app things to www
mkdir -p "${CACHE_DIR}/www"
mv * "${CACHE_DIR}/www"
mv "${CACHE_DIR}/www" .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

log_action "Bundling apache $APACHE_VERSION and php $PHP_VERSION from $APACHE_BINARY_URL"
curl $CURL_FLAGS "$APACHE_BINARY_URL" | tar xj
if [ ! -d $APACHE_DIR ] || [ ! -d $PHP_DIR ]; then
  log_fail "Could not find $APACHE_DIR or $PHP_DIR - download may have failed"
  log_fail "pwd listing: `ls`"
  exit 1
fi

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_DIR/conf
cp $LP_DIR/conf/php.ini "$PHP_DIR"

# make php available on bin
[ -d bin ] || mkdir -p bin
ln -s /app/php/bin/php bin/php


cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
